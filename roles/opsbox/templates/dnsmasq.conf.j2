#jinja2: trim_blocks:False

expand-hosts
domain-needed
bogus-priv
dns-forward-max=150
cache-size=2047
neg-ttl=360
no-poll
log-queries
log-dhcp                                                                                                                   
log-facility=/var/log/dnsmasq.log
server=147.75.207.207
server=147.75.207.208

no-dhcp-interface=bond0

dhcp-option=19,0           # option ip-forwarding off / icmp forward off

dhcp-ignore=tag:!known 		# Only offer DHCP leases to MAC's we know



dhcp-range={{ ocp_ips_first_dhcp_ip }},{{ ocp_ips_last_dhcp_ip }},365d
dhcp-option=option:router,{{ ocp_ips_gateway_ip }}
dhcp-authoritative
dhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases



dhcp-match=set:bios,60,PXEClient:Arch:00000
dhcp-boot=tag:bios,undionly.kpxe,{{ ocp_ips_opsbox_ip }}

dhcp-match=set:efi64,60,PXEClient:Arch:00009
dhcp-boot=tag:efi64,ipxe.efi,{{ ocp_ips_opsbox_ip }}

dhcp-match=set:efi64,60,PXEClient:Arch:00007
dhcp-boot=tag:efi64,ipxe.efi,{{ ocp_ips_opsbox_ip }}


enable-tftp
tftp-no-blocksize
tftp-root=/usr/share/nginx/html/ipxes/

dhcp-boot=tag:bios,undionly.kpxe
#dhcp-boot=tag:efi64,ipxe.efi
dhcp-boot=tag:efi64,snponly.efi

local=/{{ metal_ocp_domain }}/
domain={{ metal_ocp_domain }}

{{"listen-address=::1,127.0.0.1,"}}{{ ocp_ips_opsbox_ip }}

{% set count = namespace(value=5) %}
{% for host in groups['tag_ocp_networking'] %}
dhcp-host={{ eth0_mac_table.get(host) }},{{ ocp_ips_reservation_network_cidr | ansible.utils.nthhost(count.value) }},{{ host }},infinite
{{"address=/"}}{{ host }}/{{ ocp_ips_reservation_network_cidr | ansible.utils.nthhost(count.value) }}
{% set count.value = count.value + 1 %}
{% endfor %}

{{"address=/api."}}{{ metal_ocp_domain }}/{{ ocp_ips_api_ip }}
{{"address=/api-int."}}{{ metal_ocp_domain }}/{{ ocp_ips_api_ip }}
{{"address=/apps."}}{{ metal_ocp_domain }}/{{ ocp_ips_apps_ip }}

